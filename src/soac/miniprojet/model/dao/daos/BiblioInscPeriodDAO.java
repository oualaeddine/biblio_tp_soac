package soac.miniprojet.model.dao.daos;
// Generated 7 janv. 2020 11:56:55 by Hibernate Tools 5.4.7.Final

import soac.miniprojet.model.beans.BiblioInscPeriod;
import soac.miniprojet.model.beans.ScholarYear;
import soac.miniprojet.model.dao.DAO;
import soac.miniprojet.model.dao.DAOInterface;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.LinkedList;

/**
 * BiblioInscPeriod generated by hbm2java
 */
public class BiblioInscPeriodDAO extends DAO implements DAOInterface {

    @Override
    public Object getById(int id) {
        ResultSet result;
        try {
            result = statement.executeQuery("SELECT * FROM biblio_insc_period WHERE id=" + id);
            if (result.next()) {
                BiblioInscPeriod insper = new BiblioInscPeriod();
                insper.setId(result.getInt("id"));
                insper.setDateEnd(result.getDate("date_end"));
                insper.setDateStart(result.getDate("date_start"));
                insper.setScholarYear((ScholarYear) new ScholarYearDAO().getById(result.getInt("scholat_year_id")));

                return insper;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;    }

    @Override
    public boolean deleteById(int id) {
        return  deleteById(id,"biblio_insc_period");
    }

    @Override
    public boolean update(Object object) {

        BiblioInscPeriod biblioInscPeriod = (BiblioInscPeriod) object;
        try {
            statement.execute("UPDATE biblio_insc_period SET " +
                    "date_start = '" + biblioInscPeriod.getDateStart() + "'," +
                    "date_end = '" + biblioInscPeriod.getDateEnd() + "'," +
                    "scholar_year_id = '" + biblioInscPeriod.getScholarYear() + "'," +

                    " WHERE biblio_insc_period.id=" + biblioInscPeriod.getId() + ";");
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    @Override
    public boolean add(Object object) {
        BiblioInscPeriod biblioInscPeriod = (BiblioInscPeriod) object;
        try {
            statement.execute("INSERT INTO biblio_insc_period (`date_start`,`date_end`,`scholar_year_id` ) VALUES(" +
                    "'" + biblioInscPeriod.getDateStart() + "'," +
                    "'" + biblioInscPeriod.getDateEnd() + "'," +
                    "'" + biblioInscPeriod.getScholarYear() + "'" + "," +
                    ");");
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    @Override
    public LinkedList<BiblioInscPeriod> getAll() {
        LinkedList<BiblioInscPeriod> list = new LinkedList<>();
        ResultSet result;
        try {
            result = statement.executeQuery("SELECT * FROM biblio_insc_period;");
            while (result.next()) {
                BiblioInscPeriod biblioInscPeriod = new BiblioInscPeriod();
                biblioInscPeriod.setId(result.getInt("id"));
                biblioInscPeriod.setDateStart(result.getDate("nom"));
                biblioInscPeriod.setDateEnd(result.getDate("prenom"));
                biblioInscPeriod.setScholarYear((ScholarYear) new ScholarYearDAO().getById(result.getInt("scholat_year_id") ));


                list.add(biblioInscPeriod);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return list;
    }
    public int countAll() {
        ResultSet result;
        try {
            result = statement.executeQuery("SELECT count(id) FROM biblio_insc_period;");
            if (result.next()) {
                return result.getInt("count(id)");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }
}
